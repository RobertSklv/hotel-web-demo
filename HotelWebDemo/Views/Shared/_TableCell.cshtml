@using HotelWebDemo.Extensions
@using HotelWebDemo.Models.Components.Admin.Tables
@using HotelWebDemo.Models.Attributes
@using HotelWebDemo.Models.Components.Common
@using Microsoft.AspNetCore.Html

@model TableCellData

@{
    object? value = Model.GetValue();
    string? formattedValue = Model.GetFormattedValue(Model.ColumnData.Format);
    string? href = Model.GetLink();
}

<td>
    @if (string.IsNullOrEmpty(href))
    {
        <span>
            @{
                RenderContent(value, formattedValue);
            }
        </span>
    }
    else
    {
        <a href="@href" target="_blank">
            @{
                RenderContent(value, formattedValue);
            }
        </a>
    }
</td>

@functions {
    void RenderContent(object? value, string? formattedValue)
    {
        if (value == null)
        {
            @Model.ColumnData.DefaultValue
        }
        else if (Model.ColumnData.SpecialFormat == default)
        {
            @formattedValue
        }
        else if (Model.ColumnData.SpecialFormat == TableColumnSpecialFormat.TelephoneLink)
        {
            <a href="tel:@(value)">@formattedValue</a>
        }
        else if (Model.ColumnData.SpecialFormat == TableColumnSpecialFormat.EmailLink)
        {
            <a href="mailto:@(value)">@formattedValue</a>
        }
        else if (Model.ColumnData.SpecialFormat == TableColumnSpecialFormat.MeterSquared)
        {
            <span>@formattedValue</span>
            <span>m<sup>2</sup></span>
        }
        else if (Model.ColumnData.SpecialFormat == TableColumnSpecialFormat.MeterCubic)
        {
            <span>@formattedValue</span>
            <span>m<sup>3</sup></span>
        }
        else if (Model.ColumnData.SpecialFormat == TableColumnSpecialFormat.YesNo)
        {
            @((bool)value ? "Yes" : "No")
        }
        else if (Model.ColumnData.SpecialFormat == TableColumnSpecialFormat.MaleFemale)
        {
            @((bool)value ? "Male" : "Female")
        }
        else
        {
            @formattedValue
        }
    }
}